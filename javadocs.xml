<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     Apr 17, 2013 4:32:08 AM                                                        

     GWSOmega    
     javadocs gen build script
     
     Look folks I run this inside an IDE, do not try this 
     outside of an IDE..please
                   
     fredgrott                                                                
     ====================================================================== -->
<project name="GWSOmega" default="default">
    <description>
            javadocs gen build script
    </description>
	
	<property environment="env"/>
	<tstamp/>
	<property file="project.properties"/>
	<property file="local.properties"/>
	<property name="build.config.dir" location="${basedir}/build.config"/>
	<property name="ant.task.jars.dir" location="${build.config.dir}/ant"/>
	<property name="ant,task.bootstrap.jar.dir" location="${build.config.dir}/ant.bootstrap"/>
	<property name="doclets.jars.dir" location="${build.config.dir}/doclets/doclets.jars"/>
	<property name="doclava.config.dir" location="${build.config.dir}/doclets/doclava.config"/>
	<mkdir dir="${basedir}/docs/getit"/>
	<mkdir dir="${basedir}/lib"/>
	<property name="doclava.templatedir" location="${doclava.config.dir}/assets/templates"/>
	<property name="doclava.htmldir" location="${doclava.config.dir}/htmldir"/>
	<property name="android.platorm.jar" location="${sdk.dir}/platforms/${target}/android.jar"/>
	
	<path id="apache.ivy.path">
         <fileset dir="${ant,task.bootstrap.jar.dir}" >
            <include name="ivy-2.3.0.jar"/>
         </fileset>
    </path>
	
	<taskdef resource="org/apache/ivy/ant/antlib.xml"
	         uri="antlib:org.apache.ivy.ant" classpathref="apache.ivy.path"/>
	<taskdef name="ivy-retrieve" classname="org.apache.ivy.ant.IvyRetrieve"
		classpathref="apache.ivy.path"/>
	<taskdef name="ivy-resolve" classname="org.apache.ivy.ant.IvyResolve"
	classpathref="apache.ivy.path"/>
	<taskdef name="cachepath" classname="org.apache.ivy.ant.IvyCachePath"
	classpathref="apache.ivy.path"/>
	
	<path id="our.android.jar.path">
	 <pathelement location="${javahome}/jre/lib/rt.jar"/>
		<pathelement location="${android.platorm.jar}"/>
   </path>
	<path id="our.project.libs.path">
	       <fileset dir="${basedir}/libs" >
            <include name="*.jar"/>
    
             </fileset>

	</path>
   <target name="-ivyprep" description="ivy prep">
   	<!-- Easiest way to set this up is to organize by 
   	     confs for the ant paths. That means you do a 
   	     little more work in organizing the ivy confs 
   	     when setting up the ivy repo but it reduces 
   	     a lot of work. 
   	     
   	     globmapper is used to map specific jars to specific
   	     jar filesot simplify soem jarlocations.
   	     -->
   	<resolve file="${basedir}/ivy.xml"/>
   	   <retrieve pattern="lib/[conf]/[artifact].[ext]">
   	   <globmapper from="lib/doclet/gwsdroidlava-*.jar" to="lib/doclet/gwsdroidlava.jar" />
   	  </retrieve>
   	<cachepath pathid="doclet.classpath" conf="doclet" />
   	<property name="doclava.jar" location="${basedir}/lib/doclet/gwsdroidlava.jar"/>
   	</target>
	
	<target name="-javadocs" description="javadocs">
		<javadoc packagenames="*.*.*"
		           destdir="${basedir}/docs"
		           sourcepath="src:gen"
			       classpathref="our.project.libs.path"
		           docletpath="${doclava.jar}"
		           bootclasspathref="our.android.jar.path"
		           >
		      <doclet name="com.google.doclava.Doclava">
		        <param name="-stubs" value="bin/stubs" />
		      	<!-- embedding javadocs in website parameters-->
		      	<param name="-templatedir" value="${doclava.templatedir}"/>
		      	<param name="-htmldir" value="${doclava.htmldir}"/>
		      	<!--shows all including hidden-->
		      	<param name="-hidden"/>
		      	<!-- hdf parameters -->
		        <param name="-hdf"/> <param name="project.name"/> <param name="${ant.project.name}"/>
		        <!-- versioning -->
		        
		        <!-- federation -->
		        
		        
		      </doclet>
		    </javadoc>
	</target>


    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="depends" description="javadocs gen build script">
        
    </target>

    <!-- - - - - - - - - - - - - - - - - - 
          target: depends                      
         - - - - - - - - - - - - - - - - - -->
    <target name="depends">
    </target>

</project>
